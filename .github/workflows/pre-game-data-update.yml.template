# TEMPLATE: Pre-Game Data Update Workflow
# This template can be activated when you want to update data before each game
# 
# To use:
# 1. Rename this file to remove .template extension
# 2. Uncomment the schedule section and configure game times
# 3. Add any game-specific data collection logic

name: Pre-Game Data Update

on:
  # schedule:
  #   # Run 2 hours before typical AFL game times
  #   # Thursday: 7:20 PM AEST (09:20 UTC)
  #   - cron: '20 7 * * 4'
  #   # Friday: 7:50 PM AEST (09:50 UTC) 
  #   - cron: '50 7 * * 5'
  #   # Saturday: Multiple games - run at 1:30 PM AEST (03:30 UTC)
  #   - cron: '30 1 * * 6'
  #   # Sunday: 3:20 PM AEST (05:20 UTC)
  #   - cron: '20 3 * * 0'
  workflow_dispatch:
    inputs:
      season:
        description: 'AFL Season'
        required: false
        default: 'current'
      round:
        description: 'AFL Round'
        required: false
        default: 'current'

jobs:
  pre-game-update:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.2'
          use-public-rspm: true
          
      - name: Setup R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          extra-packages: |
            any::devtools
            any::piggyback
            any::fitzRoy
            any::tictoc
          needs: |
            devtools
            
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
      - name: Check for upcoming games
        id: check-games
        run: |
          echo "Checking for games in the next 4 hours..."
          # Add logic to check fitzRoy fixtures for upcoming games
          Rscript -e "
          devtools::load_all()
          fixtures <- load_fixtures(get_afl_season())
          upcoming <- fixtures %>% 
            dplyr::filter(
              lubridate::as_datetime(utcStartTime) > Sys.time(),
              lubridate::as_datetime(utcStartTime) < Sys.time() + lubridate::hours(4)
            )
          if(nrow(upcoming) > 0) {
            cat('GAMES_UPCOMING=true\n')
            cat('GAME_COUNT=', nrow(upcoming), '\n')
          } else {
            cat('GAMES_UPCOMING=false\n')
          }
          " >> $GITHUB_OUTPUT
          
      - name: Run pre-game data update
        if: steps.check-games.outputs.GAMES_UPCOMING == 'true'
        run: |
          echo "Games found! Running pre-game data update..."
          echo "Number of upcoming games: ${{ steps.check-games.outputs.GAME_COUNT }}"
          
          # Run specific pre-game data collection
          Rscript -e "
          devtools::load_all()
          
          # Update current round data
          current_season <- get_afl_season()
          current_round <- get_afl_week()
          
          cat('Pre-game update for Season:', current_season, 'Round:', current_round, '\n')
          
          # Add specific pre-game data collection here
          # Example: Update team lineups, injury lists, weather data, etc.
          "
          
      - name: Skip if no games
        if: steps.check-games.outputs.GAMES_UPCOMING == 'false'
        run: |
          echo "No games in the next 4 hours. Skipping pre-game update."
          
      - name: Commit and push if changes
        if: steps.check-games.outputs.GAMES_UPCOMING == 'true'
        run: |
          git add -A
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            echo "Changes detected, committing..."
            git commit -m "🏈 Pre-game data update - $(date +'%Y-%m-%d %H:%M')"
            git push
          fi